name: "test"

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "*"

jobs:
  test-centos7:
    name: "Centos 7"
    runs-on: "ubuntu-latest"
    container: "quay.io/centos/centos:centos7"
    strategy:
      fail-fast: false
      matrix:
        conf:
          - JDK 8
          - JDK 11
        include:
          - conf: JDK 8
            pkgName: "java-1.8.0-openjdk"
          - conf: JDK 11
            pkgName: "java-11-openjdk"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
           repository: 'rh-openjdk/c-j-c-test'
           path: 'c-j-c-test'
      - name: Test
        run: |
          set -x
          yum -y install sudo wget yum-utils rpm-build
          yumdownloader --source copy-jdk-configs
          rpm -ivh copy-jdk-configs*.src.rpm
          cp *.lua *.sh ~/rpmbuild/SOURCES/
          rpmbuild -ba ~/rpmbuild/SPECS/copy-jdk-configs.spec
          yum -y install ~/rpmbuild/RPMS/noarch/*.rpm
          c-j-c-test/test-cjc.sh --jdkName "${{ matrix.pkgName }}" --oldJdkAuto --newJdkAuto
      - name: Check
        if: ${{ always() }}
        run: |
          cat test-summary.log
          ! grep -qi '^FAILED:' test-summary.log

  test-centos8:
    name: "Centos 8"
    runs-on: "ubuntu-latest"
    container: "quay.io/centos/centos:stream8"
    strategy:
      fail-fast: false
      matrix:
        conf:
          - JDK 8
          - JDK 11
          - JDK 17
        include:
          - conf: JDK 8
            pkgName: "java-1.8.0-openjdk"
          - conf: JDK 11
            pkgName: "java-11-openjdk"
          - conf: JDK 17
            pkgName: "java-17-openjdk"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
           repository: 'rh-openjdk/c-j-c-test'
           path: 'c-j-c-test'
      - name: Test
        run: |
          set -x
          dnf -y install sudo wget dnf-plugins-core rpm-build
          sudo dnf download --source copy-jdk-configs
          rpm -ivh copy-jdk-configs*.src.rpm
          cp *.lua *.sh ~/rpmbuild/SOURCES/
          rpmbuild -ba ~/rpmbuild/SPECS/copy-jdk-configs.spec
          yum -y install ~/rpmbuild/RPMS/noarch/*.rpm
          c-j-c-test/test-cjc.sh --jdkName "${{ matrix.pkgName }}" --oldJdkAuto --newJdkAuto
      - name: Check
        if: ${{ always() }}
        run: |
          cat test-summary.log
          ! grep -qi '^FAILED:' test-summary.log

  test-centos9:
    name: "Centos 9"
    runs-on: "ubuntu-latest"
    container: "quay.io/centos/centos:stream9"
    strategy:
      fail-fast: false
      matrix:
        conf:
          - JDK 8
          - JDK 11
          - JDK 17
        include:
          - conf: JDK 8
            pkgName: "java-1.8.0-openjdk"
          - conf: JDK 11
            pkgName: "java-11-openjdk"
          - conf: JDK 17
            pkgName: "java-17-openjdk"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
           repository: 'rh-openjdk/c-j-c-test'
           path: 'c-j-c-test'
      - name: Test
        run: |
          set -x
          dnf -y install sudo wget dnf-plugins-core rpm-build
          sudo dnf download --source copy-jdk-configs
          rpm -ivh copy-jdk-configs*.src.rpm
          cp *.lua *.sh ~/rpmbuild/SOURCES/
          rpmbuild -ba ~/rpmbuild/SPECS/copy-jdk-configs.spec
          dnf -y install ~/rpmbuild/RPMS/noarch/*.rpm
          c-j-c-test/test-cjc.sh --jdkName "${{ matrix.pkgName }}" --oldJdkAuto --newJdkAuto
      - name: Check
        if: ${{ always() }}
        run: |
          cat test-summary.log
          ! grep -qi '^FAILED:' test-summary.log

  test-fedora:
    name: "Fedora 38"
    runs-on: "ubuntu-latest"
    container: "quay.io/fedora/fedora:38"
    strategy:
      fail-fast: false
      matrix:
        conf:
          - JDK 8
          - JDK 11
          - JDK 17
        include:
          - conf: JDK 8
            pkgName: "java-1.8.0-openjdk"
          - conf: JDK 11
            pkgName: "java-11-openjdk"
          - conf: JDK 17
            pkgName: "java-17-openjdk"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
           repository: 'rh-openjdk/c-j-c-test'
           path: 'c-j-c-test'
      - name: Test
        run: |
          set -x
          dnf -y install sudo wget dnf-plugins-core rpm-build
          sudo dnf download --source copy-jdk-configs
          rpm -ivh copy-jdk-configs*.src.rpm
          cp *.lua *.sh ~/rpmbuild/SOURCES/
          rpmbuild -ba ~/rpmbuild/SPECS/copy-jdk-configs.spec
          dnf -y install ~/rpmbuild/RPMS/noarch/*.rpm
          c-j-c-test/test-cjc.sh --jdkName "${{ matrix.pkgName }}" --oldJdkAuto --newJdkAuto
      - name: Check
        if: ${{ always() }}
        run: |
          cat test-summary.log
          ! grep -qi '^FAILED:' test-summary.log
